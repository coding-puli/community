(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{50:function(e,n,t){"use strict";t.d(n,"b",(function(){return g})),t.d(n,"a",(function(){return y}));var r=t(0),a=t.n(r);function o(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var t=[],r=!0,a=!1,o=void 0;try{for(var i,c=e[Symbol.iterator]();!(r=(i=c.next()).done)&&(t.push(i.value),!n||t.length!==n);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==c.return||c.return()}finally{if(a)throw o}}return t}(e,n)||function(e,n){if(!e)return;if("string"==typeof e)return i(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return i(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function c(e){if(!e.ok)throw Error(e.statusText);return e}function l(e,n){var t=e.url,a=e.method,i=e.data,l=o(Object(r.useState)(!!e),2),s=l[0],u=l[1];return Object(r.useEffect)((function(){e&&e.url&&function(){if(!e)return;u(!0),"GET"===e.method&&e.data&&delete e.data;(function(e){var n=e.url,t=e.method,r=e.data,a=r?JSON.stringify(r):null,o=new Headers({"content-type":"application/json",Accept:"application/json"});return fetch(n,{method:t,body:a,headers:o}).then(c).then((function(e){return e.redirected?(window.location.replace(e.url),e.url):e.json()}))})(e).then((function(e){n(e)})).catch((function(e){u(!1),n(void 0,e)})).finally((function(){u(!1)}))}()}),[t,a,i]),s}function s(e,n){var t=n.type,r=n.data;switch(t){case"events":return function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return Object.assign({},e,{events:n})}(e,r);case"albums":return function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return Object.assign({},e,{albums:n})}(e,r)}}var u={setEvents:function(e){return{type:"events",data:e.data}},setAlbums:function(e){return{type:"albums",data:e}},EVENTS:"events",ALBUMS:"albums"},d={events:[],albums:[]};function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function f(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function m(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var t=[],r=!0,a=!1,o=void 0;try{for(var i,c=e[Symbol.iterator]();!(r=(i=c.next()).done)&&(t.push(i.value),!n||t.length!==n);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==c.return||c.return()}finally{if(a)throw o}}return t}(e,n)||function(e,n){if(!e)return;if("string"==typeof e)return v(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return v(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}var y=Object(r.createContext)(d);function g(e){var n=e.children,t=e.method,o=e.url,i=(e.data,e.type),c=m(Object(r.useReducer)(s,d),2),v=c[0],g=c[1],b=(l({method:t,url:o},(function(e,n){var t;i==u.EVENTS?e?t=u.setEvents(e.events):n&&console.log(n):i==u.ALBUMS&&(e?t=u.setAlbums(e.albums):n&&console.log(n)),t&&(console.log(t),g(t))})),function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){f(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({},v));return a.a.createElement(y.Provider,{value:b},n)}},52:function(e,n,t){"use strict";t.d(n,"b",(function(){return o})),t.d(n,"c",(function(){return i})),t.d(n,"a",(function(){return c}));var r=t(0),a=t(50);function o(){return Object(r.useContext)(a.a).events}function i(){return function(e){if(!e||0==e.length)return null;var n=Date.now(),t=1/0,r=-1;return e.forEach((function(e,a){var o=e.start_time,i=new Date(o).getTime(),c=Math.abs(i-n);c<t&&(t=c,r=a)})),e[r]}(o())}function c(){return Object(r.useContext)(a.a).albums}},56:function(e,n,t){var r=t(20),a=t(64);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1};r(a,o);e.exports=a.locals||{}},62:function(e,n,t){var r=t(20),a=t(63);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1};r(a,o);e.exports=a.locals||{}},63:function(e,n,t){(n=t(21)(!1)).push([e.i,".list-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n}",""]),e.exports=n},64:function(e,n,t){(n=t(21)(!1)).push([e.i,".image-container {\n  position: relative;\n}\n\n.image-wrapper{\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n}\n\n.image-container img{\n  width: 240px;\n  height: 180px;\n  object-fit: cover;\n}\n\n.events-container {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-top: 64px;\n\n}\n\n.event-container {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  height: 320px;\n  background: white;\n  margin: 16px;\n  border: 4px solid white;\n}\n\n.event {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  flex: 1; /*for get full height from parent*/\n  align-items: center;\n\n}\n\n.event-date {\n  position: absolute;\n  right: 4px;\n  bottom: -8px;\n  display: flex;\n  align-self: flex-end;\n  flex-direction: column;\n  border-radius: 2px;\n  padding: 4px 8px 4px 8px;\n  align-items: center;\n\n  border: 1px solid white;\n  background: var(--tertiary-bg-color);\n  color: white;\n  font-size: var(--description-font-size);\n}\n\n.event-date-container{\n  display: flex;\n}\n\n/*.event-date{\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  top: 12px;\n  right: 16px;\n  color: white;\n  border: 1px solid white;\n  border-radius: 8px;\n  padding: 8px 16px 8px 16px;\n  z-index: 2;\n  align-items: center;\n} */\n\n\n.event-date-date{\n  font-weight: 800;\n  font-size: 14px;\n}\n\n.event-month{\n  position: relative;\n  top: -4px;\n  font-weight: 200;\n  font-size: 12px;\n}\n\n.event-year{\n  font-weight: 200;\n  font-size: 14px;\n}\n\n.events-link{\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-bottom: 2px;\n  color: #ffbac7;\n  border: 2px none #f0ad5f;\n  border-bottom-style: solid;\n  cursor: pointer\n}\n\n.event-description{\n  width: 220px;\n  padding: 2px;\n  display: flex;\n  flex-direction: column;\n  flex: 1;/*for get full height from parent*/\n}\n\n.event-name{\n  height: 18px;\n  white-space: nowrap;\n  color: var(--primary-text-color);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin: 0px;\n}\n\n.event-summary{\n  height: 52px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: var(--primary-text-color);;\n  font-weight: 400;\n  font-size: var(--description-font-size);\n}\n\n.event-redirect{\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-top: 4px;\n}\n\n.event-location{\n  color: var(--primary-text-color);\n  font-weight: 400;\n  position: relative;\n  font-size: var(--description-font-size);\n  display: flex;\n  flex-direction: column;\n}\n\n.event-location a{\n  cursor: pointer;\n  text-decoration: none;\n  color: black;\n}\n\n.event-location-name{\n  font-weight: 800;\n  font-size: var(--description-font-size);\n}\n\n\n\n\n.event-url {\n  align-self: flex-end;\n  border: 1px solid white;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--link-padding);\n  background: var(--tertiary-bg-color);\n}\n.event-read-more{\n  cursor: pointer;\n  text-decoration: none;\n  color: white;\n  font-size: var(--description-font-size);\n}\n\n\n.empty-div{\n  flex:1\n}\n\n.event-zip{\n  margin-top: 8px;\n}\n\n.location-icon {\n  display: inline-block;\n  padding-left: 30px;\n  margin: 0px 8px 0px 0px;\n  cursor: pointer;\n}\n.location-icon:after {\n  content: '';\n  background: var(--tertiary-bg-color);\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  left: 10px;\n  border-radius: 50% 50% 50% 0%;\n  transform: rotate(-50deg);\n}\n.location-icon:before {\n  content: '';\n  background: white;\n  width: 8px;\n  position: absolute;\n  height: 8px;\n  left: 16px;\n  border-radius: 50%;\n  top: 33px;\n  z-index: 1;\n}\n\n",""]),e.exports=n},8:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return b}));var r=t(0),a=t.n(r),o=t(50);t(62);function i(e){var n=e.data,t=e.onClick,r=e.ComponentType,o=n.map((function(e,n){return a.a.createElement(r,{key:n,onClick:function(){t&&t(e)},data:e})}));return a.a.createElement("div",{className:"list-container"},o)}var c=t(52),l=new Array(7);l[0]="Sunday",l[1]="Monday",l[2]="Tuesday",l[3]="Wednesday",l[4]="Thursday",l[5]="Friday",l[6]="Saturday";var s=new Array(12);function u(e){var n=new Date(e);return{day:l[n.getDay()],month:s[n.getMonth()],date:n.getDate(),year:n.getFullYear()}}s[0]="Jan",s[1]="Feb",s[2]="Mar",s[3]="Apr",s[4]="May",s[5]="Jun",s[6]="Jul",s[7]="Aug",s[8]="Sep",s[9]="Oct",s[10]="Nov",s[11]="Dec";function d(e){var n=e.event,t=n.id,r=n.name,o=n.description,i=(n.category,n.place),c=u(n.start_time),l=(c.date,c.day,c.month,c.year,null);i&&i.location&&(l=a.a.createElement(p,i));var s="https://www.facebook.com/events/".concat(t,"/");return a.a.createElement("div",{className:"event-description"},a.a.createElement("h4",{className:"event-name"},r),a.a.createElement("p",{className:"event-summary"},o),a.a.createElement("div",{className:"empty-div"}),a.a.createElement("div",{className:"event-redirect"},l,a.a.createElement("div",{className:"empty-div"}),a.a.createElement("div",{className:"event-url"},a.a.createElement("a",{className:"event-read-more",target:"_blank",href:s},"Read More"))))}function p(e){var n=e.name,t=e.location,r=t.city,o=t.country,i=(t.zip,t.latitude),c=t.longitude,l="https://www.google.com/maps/search/?api=1&query=".concat(i,",").concat(c);return a.a.createElement("div",{className:"event-location"},a.a.createElement("a",{href:l,target:"_blank"},a.a.createElement("span",{className:"event-location-name"},n)),a.a.createElement("div",{className:"event-place"},a.a.createElement("span",{className:"event-city"},r,","),a.a.createElement("span",{className:"event-country"},o)))}t(56);function f(e){var n=e.date,t=(e.day,e.month),r=(e.year,e.className);return a.a.createElement("div",{className:r},a.a.createElement("div",{className:"event-date-date"},n),a.a.createElement("div",{className:"event-month"},t))}function m(e){var n=e.url,t=u(e.start),r=t.date,o=t.day,i=t.month,c=t.year;return a.a.createElement("div",{className:"image-container"},a.a.createElement(f,{className:"event-date",date:r,day:o,month:i,year:c}),a.a.createElement("img",{src:n}))}function v(e){var n=e.data,t=n.cover,r=n.start_time,o=null;return t&&(o=a.a.createElement(m,{url:t.source,start:r})),a.a.createElement("div",{className:"event-container"},a.a.createElement("div",{className:"event"},o,a.a.createElement(d,{event:n})))}function y(e){e.gap;var n=Object(c.b)();Object(c.c)();return n&&0!=n.length?a.a.createElement("div",{className:"events-container"},a.a.createElement(i,{data:n,ComponentType:v})):null}var g="https://graph.facebook.com/me?fields=events{attending_count,place,interested_count,photos,category,cover,start_time,end_time,description,name,picture}&access_token=".concat("EAAGLgZB5xocIBABnei8kZAZAJfjgMdvAcEDGXDO3V0J4EE5TNCp0frJw9ST6edzUcfyu0LPScGo57lc6hMoR3SpuPGgB60D1A7K8Vd1HgZAbvN13MME4imRZBB8bVeTCo6WEZBLNUePuIrobi0lbZBvpWlPrI96Ydv1wE5aw8gNIwZDZD");function b(e){return a.a.createElement("div",{className:"activity-page"},a.a.createElement(o.b,{url:g,method:"GET",type:"events"},a.a.createElement(y,{gap:16})))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,