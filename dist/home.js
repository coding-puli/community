(window.webpackJsonp=window.webpackJsonp||[]).push([[4,8,18],{10:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return O}));var a=n(0),r=n.n(a),i=n(2);n(70);function l(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],a=!0,r=!1,i=void 0;try{for(var l,c=e[Symbol.iterator]();!(a=(l=c.next()).done)&&(n.push(l.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{a||null==c.return||c.return()}finally{if(r)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return c(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function s(){var e=m(["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n"]);return s=function(){return e},e}function o(){var e=m(["\n  display: flex;\n  min-height: 400px;\n  align-items: center;\n"]);return o=function(){return e},e}function m(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var u=Object(i.a)("div").attrs((function(){return{className:"slider"}}))(o());u.displayName="SliderDiv";var d=Object(i.a)("div").attrs((function(){return{className:"slider-items"}}))(s());function f(e){var t=e.onClick;return r.a.createElement("div",{className:"arrow",onClick:t},r.a.createElement("i",{className:"fa fa-angle-left fa-3x","aria-hidden":"true"}))}function p(e){var t=e.onClick;return r.a.createElement("div",{className:"arrow",onClick:t},r.a.createElement("i",{className:"fa fa-angle-right fa-3x","aria-hidden":"true"}))}function g(e){var t=e.contents,n=e.renderData,i=l(Object(a.useState)(0),2),c=i[0],s=i[1];var o=t.map((function(e,t){return n(e,c==t)}));return r.a.createElement(u,null,r.a.createElement(d,null,r.a.createElement(f,{onClick:function(){var e=t.length,n=c;s(n=n<1?e-1:n-1)}}),o,r.a.createElement(p,{onClick:function(){var e=t.length,n=c;s(n=n===e-1?0:n+1)}})))}d.displayName="SliderItemsDiv";n(72);function v(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],a=!0,r=!1,i=void 0;try{for(var l,c=e[Symbol.iterator]();!(a=(l=c.next()).done)&&(n.push(l.value),!t||n.length!==t);a=!0);}catch(e){r=!0,i=e}finally{try{a||null==c.return||c.return()}finally{if(r)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return b(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return b(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function h(){var e=x(["\n  display: flex;\n  align-items: center;\n  flex: 1;\n  padding: 32px;\n"]);return h=function(){return e},e}function y(){var e=x(["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n"]);return y=function(){return e},e}function E(){var e=x(["\n  display: flex;\n  justify-content: center;\n  flex: 1;\n"]);return E=function(){return e},e}function x(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var w=Object(i.a)("div").attrs((function(){return{className:"list-slider"}}))(E());w.displayName="SliderDiv";var N=Object(i.a)("div").attrs((function(){return{className:"slider-list-items"}}))(y());N.displayName="SliderItemsDiv";var k=Object(i.a)("section").attrs((function(){return{className:"slide-list-container"}}))(h());function j(e){var t=e.onClick;return r.a.createElement("div",{className:"arrow",onClick:t},r.a.createElement("i",{className:"fa fa-angle-left fa-3x","aria-hidden":"true"}))}function C(e){var t=e.onClick;return r.a.createElement("div",{className:"arrow",onClick:t},r.a.createElement("i",{className:"fa fa-angle-right fa-3x","aria-hidden":"true"}))}function A(e){var t=e.contents,n=e.renderData,i=e.pageSize,l=v(Object(a.useState)(0),2),c=l[0],s=l[1];var o=t.map((function(e,t){return n(e,t>c-1&&t<c+i)}));return r.a.createElement(w,null,r.a.createElement(N,null,r.a.createElement(j,{onClick:function(){s(c<i?c:c-i)}}),r.a.createElement(k,null,o),r.a.createElement(C,{onClick:function(){var e=t.length;s(c>=e-i?c:c+i)}})))}k.displayName="SliderContainerDiv";var S=n(24);n(42);function O(e){return r.a.createElement("div",{className:"home"},r.a.createElement("div",{className:"intro"},r.a.createElement(g,{contents:S.carouselData,renderData:function(e,t){if(!t)return null;for(var n=e.title,a=(e.description,e.image),i=(e.button,Array.isArray(a)?a[0]:a),l=[],c=1;c<a.length;c++){var s=a[c];l.push(r.a.createElement("div",{key:c,className:"image-stack-item-".concat(c)},r.a.createElement("img",{src:s,style:{width:"320px"}})))}return r.a.createElement("div",{key:n,className:"active-slide"},r.a.createElement("div",{className:"active-slide-content"},r.a.createElement("div",{className:"active-slide-images-stack"},l)),r.a.createElement("div",null,r.a.createElement("img",{className:"active-slide-main-image",src:i})))}})),r.a.createElement("div",{className:"partners"},r.a.createElement(A,{contents:S.partnersData,renderData:function(e,t){var n=e.name,a=(e.url,e.image);return t?r.a.createElement("div",{key:n,className:"partner-show"},r.a.createElement("img",{src:a,style:{width:"250px"}})):null},pageSize:3})),r.a.createElement("div",{className:"footer"},r.a.createElement("div",{className:"social-media-list"},r.a.createElement("div",{className:"social-media"},r.a.createElement("a",{href:"#"},r.a.createElement("i",{className:"fab fa-facebook"}))),r.a.createElement("div",{className:"social-media"},r.a.createElement("a",{href:"#"},r.a.createElement("i",{className:"fab fa-instagram"}))),r.a.createElement("div",{className:"social-media"},r.a.createElement("a",{href:"#"}," ",r.a.createElement("i",{className:"fab fa-whatsapp"})))),r.a.createElement("div",{className:"find-us"},r.a.createElement("h2",null,"CONTACT US"),r.a.createElement("div",null,"Unit 2, Penmore Business Centre,"),r.a.createElement("div",null,"Saxton Close,"),r.a.createElement("div",null,"Off Hasland Road,"),r.a.createElement("div",null,"Hasland, Chesterfield"),r.a.createElement("div",null,"S41 0SJ")),r.a.createElement("div",{className:"contact-us-list"},r.a.createElement("div",{className:"contact-us"},r.a.createElement("i",{className:"fas fa-mobile-alt"}),r.a.createElement("div",null,"01246 208052"),r.a.createElement("div",null,"07940 285534"),r.a.createElement("div",null,"07483 415432")),r.a.createElement("div",{className:"contact-us"},r.a.createElement("i",{className:"fas fa-envelope-open-text"}),r.a.createElement("div",null,"accachesterfield@gmail.com")))))}},24:function(e,t,n){"use strict";n.r(t),n.d(t,"carouselData",(function(){return a})),n.d(t,"partnersData",(function(){return r}));var a=[{title:"About us",description:"The African & Caribbean Community Association (A.C.C.A) is established to promote the welfare of the African and Caribbean Community in Chesterfield and surrounding areas, in particular by providing: Opportunities for African and Caribbean people to meet socially for mutual support to perform in artistic and cultural activities.",image:["./static/img/map.png","./static/img/community1.jpg","./static/img/community2.jpg","./static/img/community3.jpg"]},{title:"Projects",description:"An organisation to educate the community about the culture and history of the African and Caribbean people.",image:["./static/img/sitting.png","./static/img/community2.jpg","./static/img/community3.jpg","./static/img/community1.jpg"]},{title:"Activity",description:"To press for the removal of barriers which deny members of the African and Caribbean community an equal opportunity to participate in society.",image:["./static/img/drums1.png","./static/img/community3.jpg","./static/img/community2.jpg","./static/img/community1.jpg"]}],r=[{name:"Partner 1",url:"",image:"./static/img/partners/derby.jpg"},{name:"Partner 2",url:"",image:"./static/img/partners/Links.gif"},{name:"Partner 3",url:"",image:"./static/img/partners/derby.jpg"},{name:"Partner 4",url:"",image:"./static/img/partners/derby.jpg"},{name:"Partner 5",url:"",image:"./static/img/partners/derby.jpg"}]},42:function(e,t,n){var a=n(20),r=n(54);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var i={insert:"head",singleton:!1};a(r,i);e.exports=r.locals||{}},54:function(e,t,n){(t=n(21)(!1)).push([e.i,"\n\n.slider {\n  margin-left: 32px;\n  margin-right: 32px;\n  position: relative;\n}\n\n.active-slide {\n  display: flex;\n  align-items: center;\n  text-align: center;\n  margin-left: 60px;\n  margin-right: 60px;\n}\n\n.active-slide-main-image{\n  position: relative;\n  width: 440px;\n  margin-left: 60px;\n  z-index: 3;\n}\n\n.active-slide-images-stack{\n  position: relative;\n  margin-bottom: 32px;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n}\n\n.active-slide-images-stack img{\n  border-style: solid;\n  border-width: 2px;\n  border-color: #fff;\n  border-radius: 5px;\n  background-color: #fff;\n  box-shadow: 0 20px 70px -10px rgba(10, 32, 70, 0.3);\n  -webkit-transform: perspective(1000px);\n  transform: perspective(1000px);\n  -webkit-transition: -webkit-filter 300ms cubic-bezier(.215, .61, .355, 1);\n  transition: -webkit-filter 300ms cubic-bezier(.215, .61, .355, 1);\n  transition: filter 300ms cubic-bezier(.215, .61, .355, 1);\n  transition: filter 300ms cubic-bezier(.215, .61, .355, 1), -webkit-filter 300ms cubic-bezier(.215, .61, .355, 1);\n  -o-object-fit: cover;\n}\n.image-stack-item-1{\n  grid-column: 1 /  2;\n  grid-row: 1; /* must be on the same row as the other image*/\n  padding-top: 40%;  /*this pushes the image down, and keeps it proportional as it resizes*/\n  padding-left: 60%;  /*this pushes the image down, and keeps it proportional as it resizes*/\n  z-index: 2; /* make this image render on top of the bottom*/\n}\n\n.image-stack-item-2{\n  grid-column: 1 / 4;\n  grid-row: 1; /* make this image be on the same row*/\n  padding-top: 20%;  /*this pushes the image down, and keeps it proportional as it resizes*/\n  z-index: 1; /* make this image render on top of the bottom*/\n}\n\n.image-stack-item-3{\n  grid-column: 1 / 8;\n  grid-row: 1; /* make this image be on the same row*/\n  padding-left: 40%;  /*this pushes the image down, and keeps it proportional as it resizes*/\n}\n\n.active-slide button{\n  margin-top: 60px;\n  border: 1px solid white;\n  border-radius: 4px;\n  padding: var(--element-padding);\n  background: var(--tertiary-bg-color);\n  color: white;\n  font-size: var(--header-font-size);\n}\n\n.active-slide-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n",""]),e.exports=t},70:function(e,t,n){var a=n(20),r=n(71);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var i={insert:"head",singleton:!1};a(r,i);e.exports=r.locals||{}},71:function(e,t,n){(t=n(21)(!1)).push([e.i,"",""]),e.exports=t},72:function(e,t,n){var a=n(20),r=n(73);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var i={insert:"head",singleton:!1};a(r,i);e.exports=r.locals||{}},73:function(e,t,n){(t=n(21)(!1)).push([e.i,".arrow {\n  cursor: pointer\n}",""]),e.exports=t}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,